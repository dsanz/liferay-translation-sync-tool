Steps:

0.    Reorganize code to prepare the change.
  0.1 [ok] get rid of unused stuff: backporter standalone, etc.
  0.2 [ok] move actions to actions folder
  0.3 [ok] Reorganize API folder

1. [ok]  Check that export pootle files works even if template file is outdated (e.g. NAS outage)

2.     Implement new actions from exiting apis
 2.1 [ok] Merge several projects taken from pootle into a new one (basic impl)
 2.2 [ok] new src2pootle reusing the existing one
 2.3 [ok] improve template export in pootle, in case it's not properly updated in the DB
 2.4 [ok] improve template import in pootle, making sure it gets updated from the templates
 2.5 [ok] check error in merge for some keys like activity-details. Maybe update from templates is wrong.
 2.5 [ok] new pootle2src based on the spread within the same repo (use a new spread action based on the first one)
 2.6 [ok] nuew one-directional sync op
 2.7 [ok] (optional) make a sql-based translation publisher


 Go-live plan
 ---------------
 0. Initial production backup id :  2016-03-08_06-12-32
 	0.1 change manager password

 1. For each repo, rename the biggest project to make it repo-based counterpart

 2. Merge all existing pootle projects into them
	2.1 pootle-manager.sh -M portal-impl
	2.2 backupId: 2016-03-12_14-48-15 (backed on laptop)

 3. Check results

 4. Delete old, per-module projects (use provisioner if possible)
 	4.1 manual process
 	4.2 rename project portal-impl to "liferay" and update POOTLE_PROJECT_ID: pootle-manager.sh -m portal-impl liferay
 	4.3 change manager passwd
 	4.2 backupId: 2016-03-12_15-57-29 (backed on laptop)

 5. sync
 	5.0 (optional) /etc/init.d/httpd stop; /opt/bash/bash pootle-manager.sh -rB 2016-03-12_15-57-29; /etc/init.d/httpd start
	5.1 PATCH Pootle project_tree.py:258
           - store.update(update_structure=True, update_translation=True, conservative=False, store=output_file, fuzzy=True)
           + store.update(update_structure=True, update_translation=False, conservative=False, store=output_file, fuzzy=False)
 	5.2 pootle-manager.sh -s
	5.3 backupId = 2016-03-14_16-26-47 (backed on laptop)

 6. [ok] check results.
	6.1 Check pootle has newest translations from master (see german)
	6.2 Check branch in PR so that newest translations from pootle are there and no other stuff was committed
	6.3 additional checks
		- ok check keys existing ONLY in template but not in language files (this-user-segment-can-not-be-deleted-because-it-is-used-by-the-following-campaigns)
		- OK check keys existing ONLY in the langs but not in the template (metric-x-in-youtube-x). This is due to a change in a key name and wrong update_from_templates
		- check empty values in template
		-/opt/log/2016-03/2016-03-12_16-29-16/pootle_manager.log
		- layout-prototype-blog-title
		- Reading bookmarks-web Language_de.properties file from source code branch (just pulled)
          [16:46:40.129]        Reading file /opt//master/liferay-portal/modules/apps/collaboration/bookmarks/bookmarks-web/src/main/resources/content/Language_de.properties        [32 lines read in .006 s.]
          [16:46:40.150]        Synchronizing bookmarks-web <-> liferay (de): -············PPxP·xx······xPPPPPP
          x should turn into p or s

 9. [ok] Send PR

 10. Send DB to production
   10.1 Review manager.prod.conf to change POOTLE_PROJECT_ID and UPLOAD_SUBMISSION_FUNCTION
   10.2 Change text in server

11. Additional items:
  11.1 Resurrect keys with state = -100 and make them available. check they are in language.properties first
  11.2 Propagagte source_F from template unit to source_f for all units sharing the same unitid. I think this must be due to the pootle patch (change flag update_translation=False)
  	11.2.1 Make this part of update-from-templates
  	11.2.2 Check memcached (restart?) to make sure users perceive this